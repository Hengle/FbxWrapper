//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAnimCurveTangentInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAnimCurveTangentInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimCurveTangentInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAnimCurveTangentInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAnimCurveTangentInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxAnimCurveTangentInfo() : this(fbx_wrapperPINVOKE.new_FbxAnimCurveTangentInfo(), true) {
  }

  public float mDerivative {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mDerivative_set(swigCPtr, value);
    } 
    get {
      float ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mDerivative_get(swigCPtr);
      return ret;
    } 
  }

  public float mWeight {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mWeight_set(swigCPtr, value);
    } 
    get {
      float ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mWeight_get(swigCPtr);
      return ret;
    } 
  }

  public float mVelocity {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mVelocity_set(swigCPtr, value);
    } 
    get {
      float ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mVelocity_get(swigCPtr);
      return ret;
    } 
  }

  public float mAuto {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mAuto_set(swigCPtr, value);
    } 
    get {
      float ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mAuto_get(swigCPtr);
      return ret;
    } 
  }

  public bool mWeighted {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mWeighted_set(swigCPtr, value);
    } 
    get {
      bool ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mWeighted_get(swigCPtr);
      return ret;
    } 
  }

  public bool mHasVelocity {
    set {
      fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mHasVelocity_set(swigCPtr, value);
    } 
    get {
      bool ret = fbx_wrapperPINVOKE.FbxAnimCurveTangentInfo_mHasVelocity_get(swigCPtr);
      return ret;
    } 
  }

}

}
