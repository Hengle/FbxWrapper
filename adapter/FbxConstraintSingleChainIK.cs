//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxConstraintSingleChainIK : FbxConstraint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxConstraintSingleChainIK(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxConstraintSingleChainIK obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxConstraintSingleChainIK Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxConstraintSingleChainIK ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxConstraintSingleChainIK(cPtr, false);
    return ret;
  }

  public new static FbxConstraintSingleChainIK Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxConstraintSingleChainIK ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxConstraintSingleChainIK(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t PoleVectorType {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVectorType_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVectorType_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t SolverType {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SolverType_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SolverType_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t EvaluateTSAnim {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EvaluateTSAnim_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EvaluateTSAnim_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference PoleVectorObjects {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVectorObjects_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVectorObjects_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 PoleVector {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVector_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_PoleVector_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble Twist {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_Twist_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_Twist_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference FirstJointObject {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_FirstJointObject_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_FirstJointObject_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference EndJointObject {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EndJointObject_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EndJointObject_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference EffectorObject {
    set {
      fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EffectorObject_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_EffectorObject_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public double GetPoleVectorObjectWeight(FbxObject pObject) {
    double ret = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetPoleVectorObjectWeight(swigCPtr, FbxObject.getCPtr(pObject));
    return ret;
  }

  public void AddPoleVectorObject(FbxObject pObject, double pWeight) {
    fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_AddPoleVectorObject__SWIG_0(swigCPtr, FbxObject.getCPtr(pObject), pWeight);
  }

  public void AddPoleVectorObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_AddPoleVectorObject__SWIG_1(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public int GetConstraintPoleVectorCount() {
    int ret = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetConstraintPoleVectorCount(swigCPtr);
    return ret;
  }

  public FbxObject GetPoleVectorObject(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetPoleVectorObject(swigCPtr, pIndex);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void SetFirstJointObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SetFirstJointObject(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public FbxObject GetFirstJointObject() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetFirstJointObject(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void SetEndJointObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SetEndJointObject(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public FbxObject GetEndJointObject() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetEndJointObject(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void SetEffectorObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_SetEffectorObject(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public FbxObject GetEffectorObject() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintSingleChainIK_GetEffectorObject(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public enum ESolverMode {
    eRotatePlane,
    eSingleChain
  }

  public enum EPoleVectorMode {
    eVector,
    eObject
  }

  public enum EEvaluationMode {
    eNeverTS,
    eAutoDetect,
    eAlwaysTS
  }

}

}
