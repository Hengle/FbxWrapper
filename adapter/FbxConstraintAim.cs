//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxConstraintAim : FbxConstraint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxConstraintAim(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxConstraintAim_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxConstraintAim obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(fbx_wrapperPINVOKE.FbxConstraintAim_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxConstraintAim Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxConstraintAim ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxConstraintAim(cPtr, false);
    return ret;
  }

  public new static FbxConstraintAim Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxConstraintAim ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxConstraintAim(cPtr, false);
    return ret;
  }

  public FbxPropertyTDouble3 RotationOffset {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_RotationOffset_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_RotationOffset_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference AimAtObjects {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_AimAtObjects_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_AimAtObjects_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference ConstrainedObject {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_ConstrainedObject_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_ConstrainedObject_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t WorldUpType {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpType_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpType_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference WorldUpObject {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpObject_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpObject_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 WorldUpVector {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpVector_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_WorldUpVector_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 UpVector {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_UpVector_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_UpVector_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 AimVector {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_AimVector_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_AimVector_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool AffectX {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_AffectX_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_AffectX_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool AffectY {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_AffectY_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_AffectY_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool AffectZ {
    set {
      fbx_wrapperPINVOKE.FbxConstraintAim_AffectZ_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_AffectZ_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public void AddConstraintSource(FbxObject pObject, double pWeight) {
    fbx_wrapperPINVOKE.FbxConstraintAim_AddConstraintSource__SWIG_0(swigCPtr, FbxObject.getCPtr(pObject), pWeight);
  }

  public void AddConstraintSource(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintAim_AddConstraintSource__SWIG_1(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public override int GetConstraintSourceCount() {
    int ret = fbx_wrapperPINVOKE.FbxConstraintAim_GetConstraintSourceCount(swigCPtr);
    return ret;
  }

  public override FbxObject GetConstraintSource(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_GetConstraintSource(swigCPtr, pIndex);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void SetConstrainedObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintAim_SetConstrainedObject(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public override FbxObject GetConstrainedObject() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_GetConstrainedObject(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public void SetWorldUpObject(FbxObject pObject) {
    fbx_wrapperPINVOKE.FbxConstraintAim_SetWorldUpObject(swigCPtr, FbxObject.getCPtr(pObject));
  }

  public FbxObject GetWorldUpObject() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxConstraintAim_GetWorldUpObject(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public enum EWorldUp {
    eAimAtSceneUp,
    eAimAtObjectUp,
    eAimAtObjectRotationUp,
    eAimAtVector,
    eAimAtNone,
    eAimAtCount
  }

}

}
