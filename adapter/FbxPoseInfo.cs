//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxPoseInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxPoseInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxPoseInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxPoseInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxPoseInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxMatrix mMatrix {
    set {
      fbx_wrapperPINVOKE.FbxPoseInfo_mMatrix_set(swigCPtr, FbxMatrix.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxPoseInfo_mMatrix_get(swigCPtr);
      FbxMatrix ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxMatrix(cPtr, false);
      return ret;
    } 
  }

  public bool mMatrixIsLocal {
    set {
      fbx_wrapperPINVOKE.FbxPoseInfo_mMatrixIsLocal_set(swigCPtr, value);
    } 
    get {
      bool ret = fbx_wrapperPINVOKE.FbxPoseInfo_mMatrixIsLocal_get(swigCPtr);
      return ret;
    } 
  }

  public FbxNode mNode {
    set {
      fbx_wrapperPINVOKE.FbxPoseInfo_mNode_set(swigCPtr, FbxNode.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxPoseInfo_mNode_get(swigCPtr);
      FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
      return ret;
    } 
  }

  public FbxPoseInfo() : this(fbx_wrapperPINVOKE.new_FbxPoseInfo(), true) {
  }

}

}
