//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAccumulatorEntry : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAccumulatorEntry(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAccumulatorEntry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAccumulatorEntry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAccumulatorEntry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxAccumulatorEntry(FbxAccumulatorEntry.EClass pAEClass, FbxString pName, FbxString pDescr, FbxString pDetail, bool pMuteState) : this(fbx_wrapperPINVOKE.new_FbxAccumulatorEntry__SWIG_0((int)pAEClass, FbxString.getCPtr(pName), FbxString.getCPtr(pDescr), FbxString.getCPtr(pDetail), pMuteState), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAccumulatorEntry(FbxAccumulatorEntry.EClass pAEClass, FbxString pName, FbxString pDescr, FbxString pDetail) : this(fbx_wrapperPINVOKE.new_FbxAccumulatorEntry__SWIG_1((int)pAEClass, FbxString.getCPtr(pName), FbxString.getCPtr(pDescr), FbxString.getCPtr(pDetail)), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAccumulatorEntry(FbxAccumulatorEntry.EClass pAEClass, FbxString pName, FbxString pDescr) : this(fbx_wrapperPINVOKE.new_FbxAccumulatorEntry__SWIG_2((int)pAEClass, FbxString.getCPtr(pName), FbxString.getCPtr(pDescr)), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAccumulatorEntry(FbxAccumulatorEntry pAE, bool pSkipDetails) : this(fbx_wrapperPINVOKE.new_FbxAccumulatorEntry__SWIG_3(FbxAccumulatorEntry.getCPtr(pAE), pSkipDetails), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAccumulatorEntry.EClass GetClass() {
    FbxAccumulatorEntry.EClass ret = (FbxAccumulatorEntry.EClass)fbx_wrapperPINVOKE.FbxAccumulatorEntry_GetClass(swigCPtr);
    return ret;
  }

  public FbxString GetName() {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxAccumulatorEntry_GetName(swigCPtr), true);
    return ret;
  }

  public FbxString GetDescription() {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxAccumulatorEntry_GetDescription(swigCPtr), true);
    return ret;
  }

  public int GetDetailsCount() {
    int ret = fbx_wrapperPINVOKE.FbxAccumulatorEntry_GetDetailsCount(swigCPtr);
    return ret;
  }

  public FbxString GetDetail(int id) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAccumulatorEntry_GetDetail(swigCPtr, id);
    FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
    return ret;
  }

  public bool IsMuted() {
    bool ret = fbx_wrapperPINVOKE.FbxAccumulatorEntry_IsMuted(swigCPtr);
    return ret;
  }

  public enum EClass {
    eError = 1,
    eWarning = 2,
    eInformation = 4,
    eAny = 7
  }

}

}
