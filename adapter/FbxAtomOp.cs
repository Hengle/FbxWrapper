//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAtomOp : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAtomOp(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAtomOp obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAtomOp() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAtomOp(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static void Inc(SWIGTYPE_p_signed___int64 pPtr) {
    fbx_wrapperPINVOKE.FbxAtomOp_Inc(SWIGTYPE_p_signed___int64.getCPtr(pPtr));
  }

  public static void Dec(SWIGTYPE_p_signed___int64 pPtr) {
    fbx_wrapperPINVOKE.FbxAtomOp_Dec(SWIGTYPE_p_signed___int64.getCPtr(pPtr));
  }

  public static bool Add(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_Add(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool Sub(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_Sub(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool And(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_And(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool Or(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_Or(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool Nand(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_Nand(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool Xor(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_Xor(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool CompareAndSwap(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pOld, SWIGTYPE_p_signed___int64 pSwap) {
    bool ret = fbx_wrapperPINVOKE.FbxAtomOp_CompareAndSwap(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pOld), SWIGTYPE_p_signed___int64.getCPtr(pSwap));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 TestAndSet(SWIGTYPE_p_signed___int64 pPtr) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_TestAndSet(SWIGTYPE_p_signed___int64.getCPtr(pPtr)), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndSwap(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pSwap) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndSwap(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pSwap)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndInc(SWIGTYPE_p_signed___int64 pPtr) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndInc(SWIGTYPE_p_signed___int64.getCPtr(pPtr)), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndDec(SWIGTYPE_p_signed___int64 pPtr) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndDec(SWIGTYPE_p_signed___int64.getCPtr(pPtr)), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndAdd(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndAdd(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndSub(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndSub(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndOr(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndOr(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndAnd(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndAnd(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndXor(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndXor(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 FetchAndNand(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_FetchAndNand(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 IncAndFetch(SWIGTYPE_p_signed___int64 pPtr) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_IncAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr)), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 DecAndFetch(SWIGTYPE_p_signed___int64 pPtr) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_DecAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr)), true);
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 AddAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_AddAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 SubAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_SubAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 OrAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_OrAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 AndAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_AndAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 XorAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_XorAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_signed___int64 NandAndFetch(SWIGTYPE_p_signed___int64 pPtr, SWIGTYPE_p_signed___int64 pVal) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(fbx_wrapperPINVOKE.FbxAtomOp_NandAndFetch(SWIGTYPE_p_signed___int64.getCPtr(pPtr), SWIGTYPE_p_signed___int64.getCPtr(pVal)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAtomOp() : this(fbx_wrapperPINVOKE.new_FbxAtomOp(), true) {
  }

}

}
