//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAMatrix : FbxDouble4x4 {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxAMatrix(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxAMatrix_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAMatrix obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAMatrix() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAMatrix(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FbxAMatrix() : this(fbx_wrapperPINVOKE.new_FbxAMatrix__SWIG_0(), true) {
  }

  public FbxAMatrix(FbxAMatrix pOther) : this(fbx_wrapperPINVOKE.new_FbxAMatrix__SWIG_1(FbxAMatrix.getCPtr(pOther)), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix(FbxVector4 pT, FbxVector4 pR, FbxVector4 pS) : this(fbx_wrapperPINVOKE.new_FbxAMatrix__SWIG_2(FbxVector4.getCPtr(pT), FbxVector4.getCPtr(pR), FbxVector4.getCPtr(pS)), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public double Get(int pY, int pX) {
    double ret = fbx_wrapperPINVOKE.FbxAMatrix_Get(swigCPtr, pY, pX);
    return ret;
  }

  public FbxVector4 GetT() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetT(swigCPtr), true);
    return ret;
  }

  public FbxVector4 GetR() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetR__SWIG_0(swigCPtr), true);
    return ret;
  }

  public FbxQuaternion GetQ() {
    FbxQuaternion ret = new FbxQuaternion(fbx_wrapperPINVOKE.FbxAMatrix_GetQ(swigCPtr), true);
    return ret;
  }

  public FbxVector4 GetS() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetS(swigCPtr), true);
    return ret;
  }

  public FbxVector4 GetRow(int pY) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetRow(swigCPtr, pY), true);
    return ret;
  }

  public FbxVector4 GetColumn(int pX) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetColumn(swigCPtr, pX), true);
    return ret;
  }

  public void SetIdentity() {
    fbx_wrapperPINVOKE.FbxAMatrix_SetIdentity(swigCPtr);
  }

  public void SetT(FbxVector4 pT) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetT(swigCPtr, FbxVector4.getCPtr(pT));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetR(FbxVector4 pR) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetR__SWIG_0(swigCPtr, FbxVector4.getCPtr(pR));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetQ(FbxQuaternion pQ) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetQ(swigCPtr, FbxQuaternion.getCPtr(pQ));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetS(FbxVector4 pS) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetS(swigCPtr, FbxVector4.getCPtr(pS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTRS(FbxVector4 pT, FbxVector4 pR, FbxVector4 pS) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetTRS__SWIG_0(swigCPtr, FbxVector4.getCPtr(pT), FbxVector4.getCPtr(pR), FbxVector4.getCPtr(pS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTQS(FbxVector4 pT, FbxQuaternion pQ, FbxVector4 pS) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetTQS(swigCPtr, FbxVector4.getCPtr(pT), FbxQuaternion.getCPtr(pQ), FbxVector4.getCPtr(pS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAMatrix assign(FbxAMatrix pM) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_assign(swigCPtr, FbxAMatrix.getCPtr(pM)), false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix mul(double pValue) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_mul__SWIG_0(swigCPtr, pValue), true);
    return ret;
  }

  public FbxAMatrix div(double pValue) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_div(swigCPtr, pValue), true);
    return ret;
  }

  public FbxAMatrix mul_assign(double pValue) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_mul_assign__SWIG_0(swigCPtr, pValue), false);
    return ret;
  }

  public FbxAMatrix div_assign(double pValue) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_div_assign(swigCPtr, pValue), false);
    return ret;
  }

  public FbxVector4 MultT(FbxVector4 pVector4) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_MultT(swigCPtr, FbxVector4.getCPtr(pVector4)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 MultR(FbxVector4 pVector4) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_MultR(swigCPtr, FbxVector4.getCPtr(pVector4)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxQuaternion MultQ(FbxQuaternion pQuaternion) {
    FbxQuaternion ret = new FbxQuaternion(fbx_wrapperPINVOKE.FbxAMatrix_MultQ(swigCPtr, FbxQuaternion.getCPtr(pQuaternion)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 MultS(FbxVector4 pVector4) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_MultS(swigCPtr, FbxVector4.getCPtr(pVector4)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix neg() {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_neg(swigCPtr), true);
    return ret;
  }

  public FbxAMatrix mul(FbxAMatrix pOther) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_mul__SWIG_1(swigCPtr, FbxAMatrix.getCPtr(pOther)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix mul_assign(FbxAMatrix pOther) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_mul_assign__SWIG_1(swigCPtr, FbxAMatrix.getCPtr(pOther)), false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxAMatrix Inverse() {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_Inverse(swigCPtr), true);
    return ret;
  }

  public FbxAMatrix Transpose() {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_Transpose(swigCPtr), true);
    return ret;
  }

  public FbxAMatrix Slerp(FbxAMatrix pOther, double pWeight) {
    FbxAMatrix ret = new FbxAMatrix(fbx_wrapperPINVOKE.FbxAMatrix_Slerp(swigCPtr, FbxAMatrix.getCPtr(pOther), pWeight), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool eq(FbxAMatrix pOther) {
    bool ret = fbx_wrapperPINVOKE.FbxAMatrix_eq(swigCPtr, FbxAMatrix.getCPtr(pOther));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ne(FbxAMatrix pOther) {
    bool ret = fbx_wrapperPINVOKE.FbxAMatrix_ne(swigCPtr, FbxAMatrix.getCPtr(pOther));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsIdentity(double pThreshold) {
    bool ret = fbx_wrapperPINVOKE.FbxAMatrix_IsIdentity__SWIG_0(swigCPtr, pThreshold);
    return ret;
  }

  public bool IsIdentity() {
    bool ret = fbx_wrapperPINVOKE.FbxAMatrix_IsIdentity__SWIG_1(swigCPtr);
    return ret;
  }

  public FbxAMatrix(FbxVector4 pT, FbxQuaternion pQ, FbxVector4 pS) : this(fbx_wrapperPINVOKE.new_FbxAMatrix__SWIG_3(FbxVector4.getCPtr(pT), FbxQuaternion.getCPtr(pQ), FbxVector4.getCPtr(pS)), true) {
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTRS(FbxVector4 pT, FbxAMatrix pRM, FbxVector4 pS) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetTRS__SWIG_1(swigCPtr, FbxVector4.getCPtr(pT), FbxAMatrix.getCPtr(pRM), FbxVector4.getCPtr(pS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRow(int pY, FbxVector4 pRow) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetRow(swigCPtr, pY, FbxVector4.getCPtr(pRow));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetTOnly(FbxVector4 pT) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetTOnly(swigCPtr, FbxVector4.getCPtr(pT));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetROnly(FbxVector4 pR) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetROnly(swigCPtr, FbxVector4.getCPtr(pR));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetQOnly(FbxQuaternion pQ) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetQOnly(swigCPtr, FbxQuaternion.getCPtr(pQ));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetROnly() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetROnly(swigCPtr), true);
    return ret;
  }

  public FbxQuaternion GetUnnormalizedQ() {
    FbxQuaternion ret = new FbxQuaternion(fbx_wrapperPINVOKE.FbxAMatrix_GetUnnormalizedQ(swigCPtr), true);
    return ret;
  }

  public void SetR(FbxVector4 pV, int pOrd) {
    fbx_wrapperPINVOKE.FbxAMatrix_SetR__SWIG_1(swigCPtr, FbxVector4.getCPtr(pV), pOrd);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxVector4 GetR(int pOrd) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxAMatrix_GetR__SWIG_1(swigCPtr, pOrd), true);
    return ret;
  }

  public void MultRM(FbxVector4 pR) {
    fbx_wrapperPINVOKE.FbxAMatrix_MultRM(swigCPtr, FbxVector4.getCPtr(pR));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void MultSM(FbxVector4 pS) {
    fbx_wrapperPINVOKE.FbxAMatrix_MultSM(swigCPtr, FbxVector4.getCPtr(pS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsRightHand() {
    bool ret = fbx_wrapperPINVOKE.FbxAMatrix_IsRightHand(swigCPtr);
    return ret;
  }

  public double Determinant() {
    double ret = fbx_wrapperPINVOKE.FbxAMatrix_Determinant(swigCPtr);
    return ret;
  }

  public int Compare(FbxAMatrix pM, double pThreshold) {
    int ret = fbx_wrapperPINVOKE.FbxAMatrix_Compare__SWIG_0(swigCPtr, FbxAMatrix.getCPtr(pM), pThreshold);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int Compare(FbxAMatrix pM) {
    int ret = fbx_wrapperPINVOKE.FbxAMatrix_Compare__SWIG_1(swigCPtr, FbxAMatrix.getCPtr(pM));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
