//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAnimCurveFilterTSS : FbxAnimCurveFilter {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxAnimCurveFilterTSS(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimCurveFilterTSS obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAnimCurveFilterTSS() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAnimCurveFilterTSS(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FbxAnimCurveFilterTSS() : this(fbx_wrapperPINVOKE.new_FbxAnimCurveFilterTSS(), true) {
  }

  public override string GetName() {
    string ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_GetName(swigCPtr);
    return ret;
  }

  public override bool Apply(FbxAnimStack pAnimStack, FbxStatus pStatus) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_0(swigCPtr, FbxAnimStack.getCPtr(pAnimStack), FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public override bool Apply(FbxAnimStack pAnimStack) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_1(swigCPtr, FbxAnimStack.getCPtr(pAnimStack));
    return ret;
  }

  public override bool Apply(FbxObject pObj, FbxAnimStack pAnimStack, FbxStatus pStatus) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_2(swigCPtr, FbxObject.getCPtr(pObj), FbxAnimStack.getCPtr(pAnimStack), FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public override bool Apply(FbxObject pObj, FbxAnimStack pAnimStack) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_3(swigCPtr, FbxObject.getCPtr(pObj), FbxAnimStack.getCPtr(pAnimStack));
    return ret;
  }

  public override bool Apply(FbxAnimCurveNode pCurveNode, FbxStatus pStatus) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_4(swigCPtr, FbxAnimCurveNode.getCPtr(pCurveNode), FbxStatus.getCPtr(pStatus));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Apply(FbxAnimCurveNode pCurveNode) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_5(swigCPtr, FbxAnimCurveNode.getCPtr(pCurveNode));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Apply(SWIGTYPE_p_p_FbxAnimCurve pCurve, int pCount, FbxStatus pStatus) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_6(swigCPtr, SWIGTYPE_p_p_FbxAnimCurve.getCPtr(pCurve), pCount, FbxStatus.getCPtr(pStatus));
    return ret;
  }

  public override bool Apply(SWIGTYPE_p_p_FbxAnimCurve pCurve, int pCount) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_7(swigCPtr, SWIGTYPE_p_p_FbxAnimCurve.getCPtr(pCurve), pCount);
    return ret;
  }

  public override bool Apply(FbxAnimCurve pCurve, FbxStatus pStatus) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_8(swigCPtr, FbxAnimCurve.getCPtr(pCurve), FbxStatus.getCPtr(pStatus));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool Apply(FbxAnimCurve pCurve) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Apply__SWIG_9(swigCPtr, FbxAnimCurve.getCPtr(pCurve));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void Reset() {
    fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_Reset(swigCPtr);
  }

  public FbxTime GetShift() {
    FbxTime ret = new FbxTime(fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_GetShift(swigCPtr), true);
    return ret;
  }

  public void SetShift(FbxTime pShift) {
    fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_SetShift(swigCPtr, FbxTime.getCPtr(pShift));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public double GetScale() {
    double ret = fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_GetScale(swigCPtr);
    return ret;
  }

  public void SetScale(double pScale) {
    fbx_wrapperPINVOKE.FbxAnimCurveFilterTSS_SetScale(swigCPtr, pScale);
  }

}

}
