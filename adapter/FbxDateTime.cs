//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxDateTime : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxDateTime(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxDateTime obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxDateTime() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxDateTime(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public FbxDateTime() : this(fbx_wrapperPINVOKE.new_FbxDateTime__SWIG_0(), true) {
  }

  public FbxDateTime(int pDay, int pMonth, int pYear, int pHour, int pMin, int pSec, int pMillisecond) : this(fbx_wrapperPINVOKE.new_FbxDateTime__SWIG_1(pDay, pMonth, pYear, pHour, pMin, pSec, pMillisecond), true) {
  }

  public FbxDateTime(int pDay, int pMonth, int pYear, int pHour, int pMin, int pSec) : this(fbx_wrapperPINVOKE.new_FbxDateTime__SWIG_2(pDay, pMonth, pYear, pHour, pMin, pSec), true) {
  }

  public bool eq(FbxDateTime pRHS) {
    bool ret = fbx_wrapperPINVOKE.FbxDateTime_eq(swigCPtr, FbxDateTime.getCPtr(pRHS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ne(FbxDateTime pRHS) {
    bool ret = fbx_wrapperPINVOKE.FbxDateTime_ne(swigCPtr, FbxDateTime.getCPtr(pRHS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Clear() {
    fbx_wrapperPINVOKE.FbxDateTime_Clear(swigCPtr);
  }

  public bool isValid() {
    bool ret = fbx_wrapperPINVOKE.FbxDateTime_isValid(swigCPtr);
    return ret;
  }

  public void setDate(int pDay, int pMonth, int pYear) {
    fbx_wrapperPINVOKE.FbxDateTime_setDate(swigCPtr, pDay, pMonth, pYear);
  }

  public void setTime(int pHour, int pMin, int pSec, int pMillisecond) {
    fbx_wrapperPINVOKE.FbxDateTime_setTime__SWIG_0(swigCPtr, pHour, pMin, pSec, pMillisecond);
  }

  public void setTime(int pHour, int pMin, int pSec) {
    fbx_wrapperPINVOKE.FbxDateTime_setTime__SWIG_1(swigCPtr, pHour, pMin, pSec);
  }

  public FbxString toString() {
    FbxString ret = new FbxString(fbx_wrapperPINVOKE.FbxDateTime_toString(swigCPtr), true);
    return ret;
  }

  public bool fromString(string arg0) {
    bool ret = fbx_wrapperPINVOKE.FbxDateTime_fromString(swigCPtr, arg0);
    return ret;
  }

  public static FbxDateTime currentDateTimeGMT() {
    FbxDateTime ret = new FbxDateTime(fbx_wrapperPINVOKE.FbxDateTime_currentDateTimeGMT(), true);
    return ret;
  }

}

}
