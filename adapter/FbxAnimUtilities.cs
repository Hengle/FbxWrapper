//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxAnimUtilities : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FbxAnimUtilities(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimUtilities obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~FbxAnimUtilities() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          fbx_wrapperPINVOKE.delete_FbxAnimUtilities(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static bool IsAnimated(FbxObject pObj) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_IsAnimated(FbxObject.getCPtr(pObj));
    return ret;
  }

  public static bool IsChannelAnimated(FbxObject pObj, string pPropertyName, string pChannelName) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_IsChannelAnimated__SWIG_0(FbxObject.getCPtr(pObj), pPropertyName, pChannelName);
    return ret;
  }

  public static bool IsChannelAnimated(FbxObject pObj, string pPropertyName) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_IsChannelAnimated__SWIG_1(FbxObject.getCPtr(pObj), pPropertyName);
    return ret;
  }

  public class FbxAnimSplitDef : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal FbxAnimSplitDef(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxAnimSplitDef obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~FbxAnimSplitDef() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            fbx_wrapperPINVOKE.delete_FbxAnimUtilities_FbxAnimSplitDef(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public FbxString mName {
      set {
        fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mName_set(swigCPtr, FbxString.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mName_get(swigCPtr);
        FbxString ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxString(cPtr, false);
        return ret;
      } 
    }
  
    public FbxTime mStart {
      set {
        fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mStart_set(swigCPtr, FbxTime.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mStart_get(swigCPtr);
        FbxTime ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTime(cPtr, false);
        return ret;
      } 
    }
  
    public FbxTime mEnd {
      set {
        fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mEnd_set(swigCPtr, FbxTime.getCPtr(value));
      } 
      get {
        global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_mEnd_get(swigCPtr);
        FbxTime ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTime(cPtr, false);
        return ret;
      } 
    }
  
    public FbxAnimSplitDef() : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities_FbxAnimSplitDef__SWIG_0(), true) {
    }
  
    public FbxAnimSplitDef(FbxString pName, FbxTime pStart, FbxTime pEnd) : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities_FbxAnimSplitDef__SWIG_1(FbxString.getCPtr(pName), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pEnd)), true) {
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    }
  
    public FbxAnimUtilities.FbxAnimSplitDef assign(FbxAnimUtilities.FbxAnimSplitDef pRhs) {
      FbxAnimUtilities.FbxAnimSplitDef ret = new FbxAnimUtilities.FbxAnimSplitDef(fbx_wrapperPINVOKE.FbxAnimUtilities_FbxAnimSplitDef_assign(swigCPtr, FbxAnimUtilities.FbxAnimSplitDef.getCPtr(pRhs)), false);
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
  }

  public class CurveNodeIntfce : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal CurveNodeIntfce(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CurveNodeIntfce obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~CurveNodeIntfce() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            fbx_wrapperPINVOKE.delete_FbxAnimUtilities_CurveNodeIntfce(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public CurveNodeIntfce(SWIGTYPE_p_void pData) : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities_CurveNodeIntfce(SWIGTYPE_p_void.getCPtr(pData)), true) {
    }
  
    public ulong GetHandle() {
      ulong ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetHandle__SWIG_0(swigCPtr);
      return ret;
    }
  
    public string GetTimeWarpName() {
      string ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetTimeWarpName(swigCPtr);
      return ret;
    }
  
    public FbxAnimUtilities.CurveNodeIntfce GetTimeWarp() {
      FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetTimeWarp(swigCPtr), true);
      return ret;
    }
  
    public FbxAnimUtilities.CurveNodeIntfce GetLayer(int pId) {
      FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetLayer(swigCPtr, pId), true);
      return ret;
    }
  
    public int GetCount() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetCount(swigCPtr);
      return ret;
    }
  
    public SWIGTYPE_p_void GetHandle(uint pId) {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetHandle__SWIG_1(swigCPtr, pId);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    }
  
    public SWIGTYPE_p_void GetCurveHandle(int pId) {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetCurveHandle__SWIG_0(swigCPtr, pId);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    }
  
    public SWIGTYPE_p_void GetCurveHandle() {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_GetCurveHandle__SWIG_1(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    }
  
    public void SetCurveHandle(SWIGTYPE_p_void pCurveHandle, int pId) {
      fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_SetCurveHandle__SWIG_0(swigCPtr, SWIGTYPE_p_void.getCPtr(pCurveHandle), pId);
    }
  
    public void SetCurveHandle(SWIGTYPE_p_void pCurveHandle) {
      fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_SetCurveHandle__SWIG_1(swigCPtr, SWIGTYPE_p_void.getCPtr(pCurveHandle));
    }
  
    public FbxAnimUtilities.CurveNodeIntfce FindRecursive(string pName) {
      FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_FindRecursive(swigCPtr, pName), true);
      return ret;
    }
  
    public bool IsValid() {
      bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_IsValid(swigCPtr);
      return ret;
    }
  
    public FbxAnimUtilities.CurveNodeIntfce assign(FbxAnimUtilities.CurveNodeIntfce lRhs) {
      FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_assign(swigCPtr, FbxAnimUtilities.CurveNodeIntfce.getCPtr(lRhs)), false);
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
    public bool eq(FbxAnimUtilities.CurveNodeIntfce lRhs) {
      bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveNodeIntfce_eq(swigCPtr, FbxAnimUtilities.CurveNodeIntfce.getCPtr(lRhs));
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
  }

  public class CurveIntfce : global::System.IDisposable {
    private global::System.Runtime.InteropServices.HandleRef swigCPtr;
    protected bool swigCMemOwn;
  
    internal CurveIntfce(global::System.IntPtr cPtr, bool cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
    }
  
    internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CurveIntfce obj) {
      return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
    }
  
    ~CurveIntfce() {
      Dispose();
    }
  
    public virtual void Dispose() {
      lock(this) {
        if (swigCPtr.Handle != global::System.IntPtr.Zero) {
          if (swigCMemOwn) {
            swigCMemOwn = false;
            fbx_wrapperPINVOKE.delete_FbxAnimUtilities_CurveIntfce(swigCPtr);
          }
          swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
        }
        global::System.GC.SuppressFinalize(this);
      }
    }
  
    public CurveIntfce(SWIGTYPE_p_void pData) : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities_CurveIntfce__SWIG_0(SWIGTYPE_p_void.getCPtr(pData)), true) {
    }
  
    public CurveIntfce(FbxAnimCurve pAnimCurve) : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities_CurveIntfce__SWIG_1(FbxAnimCurve.getCPtr(pAnimCurve)), true) {
    }
  
    public float GetValue() {
      float ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetValue(swigCPtr);
      return ret;
    }
  
    public void SetValue(float pVal) {
      fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_SetValue(swigCPtr, pVal);
    }
  
    public int KeyGetCount() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_KeyGetCount(swigCPtr);
      return ret;
    }
  
    public SWIGTYPE_p_void GetCurveHandle() {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetCurveHandle(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    }
  
    public void SetCurveHandle(SWIGTYPE_p_void pData) {
      fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_SetCurveHandle(swigCPtr, SWIGTYPE_p_void.getCPtr(pData));
    }
  
    public int GetPreExtrapolation() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetPreExtrapolation(swigCPtr);
      return ret;
    }
  
    public int GetPreExtrapolationCount() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetPreExtrapolationCount(swigCPtr);
      return ret;
    }
  
    public int GetPostExtrapolation() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetPostExtrapolation(swigCPtr);
      return ret;
    }
  
    public int GetPostExtrapolationCount() {
      int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_GetPostExtrapolationCount(swigCPtr);
      return ret;
    }
  
    public bool IsValid() {
      bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_IsValid(swigCPtr);
      return ret;
    }
  
    public FbxAnimUtilities.CurveIntfce assign(FbxAnimUtilities.CurveIntfce lRhs) {
      FbxAnimUtilities.CurveIntfce ret = new FbxAnimUtilities.CurveIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_assign(swigCPtr, FbxAnimUtilities.CurveIntfce.getCPtr(lRhs)), false);
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
    public bool eq(FbxAnimUtilities.CurveIntfce lRhs) {
      bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CurveIntfce_eq(swigCPtr, FbxAnimUtilities.CurveIntfce.getCPtr(lRhs));
      if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    }
  
  }

  public static int SplitAnimationIntoMultipleStacks(FbxScene pScene, SWIGTYPE_p_FbxArrayT_FbxAnimUtilities__FbxAnimSplitDef_p_t pAnimSplitDefinitions, FbxAnimStack pSrcAnimStack, SWIGTYPE_p_FbxArrayT_FbxAnimStack_p_t pDstStacks) {
    int ret = fbx_wrapperPINVOKE.FbxAnimUtilities_SplitAnimationIntoMultipleStacks(FbxScene.getCPtr(pScene), SWIGTYPE_p_FbxArrayT_FbxAnimUtilities__FbxAnimSplitDef_p_t.getCPtr(pAnimSplitDefinitions), FbxAnimStack.getCPtr(pSrcAnimStack), SWIGTYPE_p_FbxArrayT_FbxAnimStack_p_t.getCPtr(pDstStacks));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void ShareAnimCurves(FbxProperty pDstProperty, FbxProperty pSrcProperty, FbxScene pScene) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_ShareAnimCurves(FbxProperty.getCPtr(pDstProperty), FbxProperty.getCPtr(pSrcProperty), FbxScene.getCPtr(pScene));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void SetTimeWarpSet(FbxMultiMap pTWset) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_SetTimeWarpSet(FbxMultiMap.getCPtr(pTWset));
  }

  public static FbxAnimUtilities.CurveNodeIntfce CreateCurveNode(string pName) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CreateCurveNode__SWIG_0(pName), true);
    return ret;
  }

  public static FbxAnimUtilities.CurveNodeIntfce CreateCurveNode(FbxIO pFileObject) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CreateCurveNode__SWIG_1(FbxIO.getCPtr(pFileObject)), true);
    return ret;
  }

  public static FbxAnimUtilities.CurveNodeIntfce CreateCurveNode(FbxIO pFileObject, FbxAnimUtilities.CurveNodeIntfce pParent, bool pOnlyDefaults) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CreateCurveNode__SWIG_2(FbxIO.getCPtr(pFileObject), FbxAnimUtilities.CurveNodeIntfce.getCPtr(pParent), pOnlyDefaults), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxAnimUtilities.CurveNodeIntfce CreateCurveNode(FbxIO pFileObject, FbxAnimUtilities.CurveNodeIntfce pParent) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CreateCurveNode__SWIG_3(FbxIO.getCPtr(pFileObject), FbxAnimUtilities.CurveNodeIntfce.getCPtr(pParent)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static FbxAnimUtilities.CurveNodeIntfce CreateTimeWarpNode(FbxAnimCurve pAnimCurve, string pFalloffName) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_CreateTimeWarpNode(FbxAnimCurve.getCPtr(pAnimCurve), pFalloffName), true);
    return ret;
  }

  public static FbxAnimUtilities.CurveNodeIntfce GrabCurveNode(FbxAnimCurveNode pCN) {
    FbxAnimUtilities.CurveNodeIntfce ret = new FbxAnimUtilities.CurveNodeIntfce(fbx_wrapperPINVOKE.FbxAnimUtilities_GrabCurveNode(FbxAnimCurveNode.getCPtr(pCN)), true);
    return ret;
  }

  public static void RestrieveCurveNode(FbxAnimUtilities.CurveNodeIntfce pData, FbxIO mFileObject) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_RestrieveCurveNode(FbxAnimUtilities.CurveNodeIntfce.getCPtr(pData), FbxIO.getCPtr(mFileObject));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void StoreCurveNode(FbxAnimUtilities.CurveNodeIntfce pData, FbxIO mFileObject) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_StoreCurveNode(FbxAnimUtilities.CurveNodeIntfce.getCPtr(pData), FbxIO.getCPtr(mFileObject));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void ReleaseCurveNode(FbxAnimCurveNode pCurveNode) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_ReleaseCurveNode(FbxAnimCurveNode.getCPtr(pCurveNode));
  }

  public static void DestroyCurveNode(FbxAnimUtilities.CurveNodeIntfce pData) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_DestroyCurveNode(FbxAnimUtilities.CurveNodeIntfce.getCPtr(pData));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void DestroyCurve(FbxAnimUtilities.CurveIntfce pData) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_DestroyCurve(FbxAnimUtilities.CurveIntfce.getCPtr(pData));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void ConnectTimeWarp(FbxAnimCurveNode pCurveNode, FbxAnimUtilities.CurveNodeIntfce pData, FbxMultiMap pTimeWarpsKFCurveNodes) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_ConnectTimeWarp(FbxAnimCurveNode.getCPtr(pCurveNode), FbxAnimUtilities.CurveNodeIntfce.getCPtr(pData), FbxMultiMap.getCPtr(pTimeWarpsKFCurveNodes));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void MergeLayerAndTimeWarp(FbxObject pObj, FbxAnimLayer pAnimLayer) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_MergeLayerAndTimeWarp(FbxObject.getCPtr(pObj), FbxAnimLayer.getCPtr(pAnimLayer));
  }

  public static void CopyFrom(FbxAnimCurve pAC, FbxAnimUtilities.CurveIntfce pFC) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_CopyFrom(FbxAnimCurve.getCPtr(pAC), FbxAnimUtilities.CurveIntfce.getCPtr(pFC));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool CompareCurves(FbxAnimCurve pAC1, FbxAnimCurve pAC2) {
    bool ret = fbx_wrapperPINVOKE.FbxAnimUtilities_CompareCurves(FbxAnimCurve.getCPtr(pAC1), FbxAnimCurve.getCPtr(pAC2));
    return ret;
  }

  public static void Resample(FbxAnimCurve pSourceCurve, FbxAnimCurve pTargetCurve, FbxTime pStart, FbxTime pStop, FbxTime pPeriod, FbxAnimCurveDef.EInterpolationType pInterpolation, FbxAnimCurveDef.ETangentMode pTangentMode, bool pAddStopKey) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_0(FbxAnimCurve.getCPtr(pSourceCurve), FbxAnimCurve.getCPtr(pTargetCurve), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop), FbxTime.getCPtr(pPeriod), (int)pInterpolation, (int)pTangentMode, pAddStopKey);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pSourceCurve, FbxAnimCurve pTargetCurve, FbxTime pStart, FbxTime pStop, FbxTime pPeriod, FbxAnimCurveDef.EInterpolationType pInterpolation, FbxAnimCurveDef.ETangentMode pTangentMode) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_1(FbxAnimCurve.getCPtr(pSourceCurve), FbxAnimCurve.getCPtr(pTargetCurve), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop), FbxTime.getCPtr(pPeriod), (int)pInterpolation, (int)pTangentMode);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pSourceCurve, FbxAnimCurve pTargetCurve, FbxTime pStart, FbxTime pStop, FbxTime pPeriod, bool pAddStopKey) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_2(FbxAnimCurve.getCPtr(pSourceCurve), FbxAnimCurve.getCPtr(pTargetCurve), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop), FbxTime.getCPtr(pPeriod), pAddStopKey);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pSourceCurve, FbxAnimCurve pTargetCurve, FbxTime pStart, FbxTime pStop, FbxTime pPeriod) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_3(FbxAnimCurve.getCPtr(pSourceCurve), FbxAnimCurve.getCPtr(pTargetCurve), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop), FbxTime.getCPtr(pPeriod));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pCurve, FbxTime pPeriod, FbxTime pStart, FbxTime pStop, bool pKeysOnFrame) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_4(FbxAnimCurve.getCPtr(pCurve), FbxTime.getCPtr(pPeriod), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop), pKeysOnFrame);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pCurve, FbxTime pPeriod, FbxTime pStart, FbxTime pStop) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_5(FbxAnimCurve.getCPtr(pCurve), FbxTime.getCPtr(pPeriod), FbxTime.getCPtr(pStart), FbxTime.getCPtr(pStop));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pCurve, FbxTime pPeriod, FbxTime pStart) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_6(FbxAnimCurve.getCPtr(pCurve), FbxTime.getCPtr(pPeriod), FbxTime.getCPtr(pStart));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Resample(FbxAnimCurve pCurve, FbxTime pPeriod) {
    fbx_wrapperPINVOKE.FbxAnimUtilities_Resample__SWIG_7(FbxAnimCurve.getCPtr(pCurve), FbxTime.getCPtr(pPeriod));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxAnimUtilities() : this(fbx_wrapperPINVOKE.new_FbxAnimUtilities(), true) {
  }

}

}
