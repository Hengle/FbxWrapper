//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxScene : FbxDocument {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxScene(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxScene_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxScene obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      fbx_wrapperPINVOKE.FbxScene_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(fbx_wrapperPINVOKE.FbxScene_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxScene Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxScene ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxScene(cPtr, false);
    return ret;
  }

  public new static FbxScene Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxScene ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxScene(cPtr, false);
    return ret;
  }

  public override void Clear() {
    fbx_wrapperPINVOKE.FbxScene_Clear(swigCPtr);
  }

  public FbxNode GetRootNode() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetRootNode(swigCPtr);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public void FillTextureArray(SWIGTYPE_p_FbxArrayT_FbxTexture_p_t pTextureArray) {
    fbx_wrapperPINVOKE.FbxScene_FillTextureArray(swigCPtr, SWIGTYPE_p_FbxArrayT_FbxTexture_p_t.getCPtr(pTextureArray));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void FillMaterialArray(SWIGTYPE_p_FbxArrayT_FbxSurfaceMaterial_p_t pMaterialArray) {
    fbx_wrapperPINVOKE.FbxScene_FillMaterialArray(swigCPtr, SWIGTYPE_p_FbxArrayT_FbxSurfaceMaterial_p_t.getCPtr(pMaterialArray));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetGenericNodeCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetGenericNodeCount(swigCPtr);
    return ret;
  }

  public FbxGenericNode GetGenericNode(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetGenericNode__SWIG_0(swigCPtr, pIndex);
    FbxGenericNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGenericNode(cPtr, false);
    return ret;
  }

  public FbxGenericNode GetGenericNode(string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetGenericNode__SWIG_1(swigCPtr, pName);
    FbxGenericNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGenericNode(cPtr, false);
    return ret;
  }

  public bool AddGenericNode(FbxGenericNode pGenericNode) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddGenericNode(swigCPtr, FbxGenericNode.getCPtr(pGenericNode));
    return ret;
  }

  public bool RemoveGenericNode(FbxGenericNode pGenericNode) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveGenericNode(swigCPtr, FbxGenericNode.getCPtr(pGenericNode));
    return ret;
  }

  public int GetCharacterCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetCharacterCount(swigCPtr);
    return ret;
  }

  public FbxCharacter GetCharacter(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetCharacter(swigCPtr, pIndex);
    FbxCharacter ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCharacter(cPtr, false);
    return ret;
  }

  public int CreateCharacter(string pName) {
    int ret = fbx_wrapperPINVOKE.FbxScene_CreateCharacter(swigCPtr, pName);
    return ret;
  }

  public void DestroyCharacter(int pIndex) {
    fbx_wrapperPINVOKE.FbxScene_DestroyCharacter(swigCPtr, pIndex);
  }

  public int GetControlSetPlugCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetControlSetPlugCount(swigCPtr);
    return ret;
  }

  public FbxControlSetPlug GetControlSetPlug(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetControlSetPlug(swigCPtr, pIndex);
    FbxControlSetPlug ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxControlSetPlug(cPtr, false);
    return ret;
  }

  public int CreateControlSetPlug(string pName) {
    int ret = fbx_wrapperPINVOKE.FbxScene_CreateControlSetPlug(swigCPtr, pName);
    return ret;
  }

  public void DestroyControlSetPlug(int pIndex) {
    fbx_wrapperPINVOKE.FbxScene_DestroyControlSetPlug(swigCPtr, pIndex);
  }

  public int GetCharacterPoseCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetCharacterPoseCount(swigCPtr);
    return ret;
  }

  public FbxCharacterPose GetCharacterPose(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetCharacterPose(swigCPtr, pIndex);
    FbxCharacterPose ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCharacterPose(cPtr, false);
    return ret;
  }

  public int CreateCharacterPose(string pName) {
    int ret = fbx_wrapperPINVOKE.FbxScene_CreateCharacterPose(swigCPtr, pName);
    return ret;
  }

  public void DestroyCharacterPose(int pIndex) {
    fbx_wrapperPINVOKE.FbxScene_DestroyCharacterPose(swigCPtr, pIndex);
  }

  public int GetPoseCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetPoseCount(swigCPtr);
    return ret;
  }

  public FbxPose GetPose(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetPose(swigCPtr, pIndex);
    FbxPose ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPose(cPtr, false);
    return ret;
  }

  public bool AddPose(FbxPose pPose) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddPose(swigCPtr, FbxPose.getCPtr(pPose));
    return ret;
  }

  public bool RemovePose(FbxPose pPose) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemovePose__SWIG_0(swigCPtr, FbxPose.getCPtr(pPose));
    return ret;
  }

  public bool RemovePose(int pIndex) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemovePose__SWIG_1(swigCPtr, pIndex);
    return ret;
  }

  public FbxDocumentInfo GetSceneInfo() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetSceneInfo(swigCPtr);
    FbxDocumentInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxDocumentInfo(cPtr, false);
    return ret;
  }

  public void SetSceneInfo(FbxDocumentInfo pSceneInfo) {
    fbx_wrapperPINVOKE.FbxScene_SetSceneInfo(swigCPtr, FbxDocumentInfo.getCPtr(pSceneInfo));
  }

  public FbxGlobalSettings GetGlobalSettings() {
    FbxGlobalSettings ret = new FbxGlobalSettings(fbx_wrapperPINVOKE.FbxScene_GetGlobalSettings__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void SetCurrentAnimationStack(FbxAnimStack pAnimStack) {
    fbx_wrapperPINVOKE.FbxScene_SetCurrentAnimationStack(swigCPtr, FbxAnimStack.getCPtr(pAnimStack));
  }

  public FbxAnimStack GetCurrentAnimationStack() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetCurrentAnimationStack(swigCPtr);
    FbxAnimStack ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAnimStack(cPtr, false);
    return ret;
  }

  public void SetAnimationEvaluator(FbxAnimEvaluator pEvaluator) {
    fbx_wrapperPINVOKE.FbxScene_SetAnimationEvaluator(swigCPtr, FbxAnimEvaluator.getCPtr(pEvaluator));
  }

  public FbxAnimEvaluator GetAnimationEvaluator() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetAnimationEvaluator(swigCPtr);
    FbxAnimEvaluator ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxAnimEvaluator(cPtr, false);
    return ret;
  }

  public void FillPoseArray(SWIGTYPE_p_FbxArrayT_FbxPose_p_t pPoseArray) {
    fbx_wrapperPINVOKE.FbxScene_FillPoseArray(swigCPtr, SWIGTYPE_p_FbxArrayT_FbxPose_p_t.getCPtr(pPoseArray));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public int GetMaterialCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetMaterialCount(swigCPtr);
    return ret;
  }

  public FbxSurfaceMaterial GetMaterial(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetMaterial__SWIG_0(swigCPtr, pIndex);
    FbxSurfaceMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSurfaceMaterial(cPtr, false);
    return ret;
  }

  public FbxSurfaceMaterial GetMaterial(string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetMaterial__SWIG_1(swigCPtr, pName);
    FbxSurfaceMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxSurfaceMaterial(cPtr, false);
    return ret;
  }

  public bool AddMaterial(FbxSurfaceMaterial pMaterial) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddMaterial(swigCPtr, FbxSurfaceMaterial.getCPtr(pMaterial));
    return ret;
  }

  public bool RemoveMaterial(FbxSurfaceMaterial pMaterial) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveMaterial(swigCPtr, FbxSurfaceMaterial.getCPtr(pMaterial));
    return ret;
  }

  public int GetTextureCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetTextureCount(swigCPtr);
    return ret;
  }

  public FbxTexture GetTexture(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetTexture__SWIG_0(swigCPtr, pIndex);
    FbxTexture ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTexture(cPtr, false);
    return ret;
  }

  public FbxTexture GetTexture(string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetTexture__SWIG_1(swigCPtr, pName);
    FbxTexture ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTexture(cPtr, false);
    return ret;
  }

  public bool AddTexture(FbxTexture pTexture) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddTexture(swigCPtr, FbxTexture.getCPtr(pTexture));
    return ret;
  }

  public bool RemoveTexture(FbxTexture pTexture) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveTexture(swigCPtr, FbxTexture.getCPtr(pTexture));
    return ret;
  }

  public int GetNodeCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetNodeCount(swigCPtr);
    return ret;
  }

  public FbxNode GetNode(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetNode(swigCPtr, pIndex);
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    return ret;
  }

  public bool AddNode(FbxNode pNode) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddNode(swigCPtr, FbxNode.getCPtr(pNode));
    return ret;
  }

  public bool RemoveNode(FbxNode pNode) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveNode(swigCPtr, FbxNode.getCPtr(pNode));
    return ret;
  }

  public int GetCurveOnSurfaceCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetCurveOnSurfaceCount(swigCPtr);
    return ret;
  }

  public FbxNode FindNodeByName(FbxString pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_FindNodeByName(swigCPtr, FbxString.getCPtr(pName));
    FbxNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxNode(cPtr, false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int GetGeometryCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetGeometryCount(swigCPtr);
    return ret;
  }

  public FbxGeometry GetGeometry(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetGeometry(swigCPtr, pIndex);
    FbxGeometry ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxGeometry(cPtr, false);
    return ret;
  }

  public bool AddGeometry(FbxGeometry pGeometry) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddGeometry(swigCPtr, FbxGeometry.getCPtr(pGeometry));
    return ret;
  }

  public bool RemoveGeometry(FbxGeometry pGeometry) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveGeometry(swigCPtr, FbxGeometry.getCPtr(pGeometry));
    return ret;
  }

  public int GetVideoCount() {
    int ret = fbx_wrapperPINVOKE.FbxScene_GetVideoCount(swigCPtr);
    return ret;
  }

  public FbxVideo GetVideo(int pIndex) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetVideo(swigCPtr, pIndex);
    FbxVideo ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxVideo(cPtr, false);
    return ret;
  }

  public bool AddVideo(FbxVideo pVideo) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_AddVideo(swigCPtr, FbxVideo.getCPtr(pVideo));
    return ret;
  }

  public bool RemoveVideo(FbxVideo pVideo) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_RemoveVideo(swigCPtr, FbxVideo.getCPtr(pVideo));
    return ret;
  }

  public void SyncShowPropertyForInstance() {
    fbx_wrapperPINVOKE.FbxScene_SyncShowPropertyForInstance(swigCPtr);
  }

  public bool ComputeBoundingBoxMinMaxCenter(FbxVector4 pBBoxMin, FbxVector4 pBBoxMax, FbxVector4 pBBoxCenter, bool pSelected, FbxTime pTime) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_ComputeBoundingBoxMinMaxCenter__SWIG_0(swigCPtr, FbxVector4.getCPtr(pBBoxMin), FbxVector4.getCPtr(pBBoxMax), FbxVector4.getCPtr(pBBoxCenter), pSelected, FbxTime.getCPtr(pTime));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ComputeBoundingBoxMinMaxCenter(FbxVector4 pBBoxMin, FbxVector4 pBBoxMax, FbxVector4 pBBoxCenter, bool pSelected) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_ComputeBoundingBoxMinMaxCenter__SWIG_1(swigCPtr, FbxVector4.getCPtr(pBBoxMin), FbxVector4.getCPtr(pBBoxMax), FbxVector4.getCPtr(pBBoxCenter), pSelected);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool ComputeBoundingBoxMinMaxCenter(FbxVector4 pBBoxMin, FbxVector4 pBBoxMax, FbxVector4 pBBoxCenter) {
    bool ret = fbx_wrapperPINVOKE.FbxScene_ComputeBoundingBoxMinMaxCenter__SWIG_2(swigCPtr, FbxVector4.getCPtr(pBBoxMin), FbxVector4.getCPtr(pBBoxMax), FbxVector4.getCPtr(pBBoxCenter));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ConvertNurbsSurfaceToNurbs() {
    fbx_wrapperPINVOKE.FbxScene_ConvertNurbsSurfaceToNurbs(swigCPtr);
  }

  public void ConvertMeshNormals() {
    fbx_wrapperPINVOKE.FbxScene_ConvertMeshNormals(swigCPtr);
  }

  public void ConvertNurbsCurvesToNulls() {
    fbx_wrapperPINVOKE.FbxScene_ConvertNurbsCurvesToNulls(swigCPtr);
  }

  public void ConnectTextures() {
    fbx_wrapperPINVOKE.FbxScene_ConnectTextures(swigCPtr);
  }

  public void BuildTextureLayersDirectArray() {
    fbx_wrapperPINVOKE.FbxScene_BuildTextureLayersDirectArray(swigCPtr);
  }

  public void FixInheritType(FbxNode pNode) {
    fbx_wrapperPINVOKE.FbxScene_FixInheritType(swigCPtr, FbxNode.getCPtr(pNode));
  }

  public void UpdateScaleCompensate(FbxNode pNode, FbxIOSettings pIOS) {
    fbx_wrapperPINVOKE.FbxScene_UpdateScaleCompensate(swigCPtr, FbxNode.getCPtr(pNode), FbxIOSettings.getCPtr(pIOS));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public FbxClassId ConvertAttributeTypeToClassID(FbxNodeAttribute.EType pAttributeType) {
    FbxClassId ret = new FbxClassId(fbx_wrapperPINVOKE.FbxScene_ConvertAttributeTypeToClassID(swigCPtr, (int)pAttributeType), true);
    return ret;
  }

  public FbxGlobalLightSettings GlobalLightSettings() {
    FbxGlobalLightSettings ret = new FbxGlobalLightSettings(fbx_wrapperPINVOKE.FbxScene_GlobalLightSettings(swigCPtr), false);
    return ret;
  }

  public FbxGlobalCameraSettings GlobalCameraSettings() {
    FbxGlobalCameraSettings ret = new FbxGlobalCameraSettings(fbx_wrapperPINVOKE.FbxScene_GlobalCameraSettings(swigCPtr), false);
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType, FbxObject pContainer, SWIGTYPE_p_void pSet) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Clone__SWIG_0(swigCPtr, (int)pCloneType, FbxObject.getCPtr(pContainer), SWIGTYPE_p_void.getCPtr(pSet));
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType, FbxObject pContainer) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Clone__SWIG_1(swigCPtr, (int)pCloneType, FbxObject.getCPtr(pContainer));
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone(FbxObject.ECloneType pCloneType) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Clone__SWIG_2(swigCPtr, (int)pCloneType);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Clone() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_Clone__SWIG_3(swigCPtr);
    FbxObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxObject(cPtr, false);
    return ret;
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(fbx_wrapperPINVOKE.FbxScene_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ConnectMaterials() {
    fbx_wrapperPINVOKE.FbxScene_ConnectMaterials(swigCPtr);
  }

  public void BuildMaterialLayersDirectArray() {
    fbx_wrapperPINVOKE.FbxScene_BuildMaterialLayersDirectArray(swigCPtr);
  }

  public void ReindexMaterialConnections() {
    fbx_wrapperPINVOKE.FbxScene_ReindexMaterialConnections(swigCPtr);
  }

  public FbxMultiMap AddTakeTimeWarpSet(string pTakeName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_AddTakeTimeWarpSet(swigCPtr, pTakeName);
    FbxMultiMap ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxMultiMap(cPtr, false);
    return ret;
  }

  public FbxMultiMap GetTakeTimeWarpSet(string pTakeName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxScene_GetTakeTimeWarpSet(swigCPtr, pTakeName);
    FbxMultiMap ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxMultiMap(cPtr, false);
    return ret;
  }

  public void ForceKill() {
    fbx_wrapperPINVOKE.FbxScene_ForceKill(swigCPtr);
  }

}

}
