//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Fbx {

public class FbxCamera : FbxNodeAttribute {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal FbxCamera(global::System.IntPtr cPtr, bool cMemoryOwn) : base(fbx_wrapperPINVOKE.FbxCamera_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FbxCamera obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FbxClassId ClassId {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ClassId_set(FbxClassId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ClassId_get();
      FbxClassId ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxClassId(cPtr, false);
      return ret;
    } 
  }

  public override FbxClassId GetClassId() {
    FbxClassId ret = new FbxClassId(fbx_wrapperPINVOKE.FbxCamera_GetClassId(swigCPtr), true);
    return ret;
  }

  public new static FbxCamera Create(FbxManager pManager, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_Create__SWIG_0(FbxManager.getCPtr(pManager), pName);
    FbxCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCamera(cPtr, false);
    return ret;
  }

  public new static FbxCamera Create(FbxObject pContainer, string pName) {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_Create__SWIG_1(FbxObject.getCPtr(pContainer), pName);
    FbxCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxCamera(cPtr, false);
    return ret;
  }

  public override FbxNodeAttribute.EType GetAttributeType() {
    FbxNodeAttribute.EType ret = (FbxNodeAttribute.EType)fbx_wrapperPINVOKE.FbxCamera_GetAttributeType(swigCPtr);
    return ret;
  }

  public void Reset() {
    fbx_wrapperPINVOKE.FbxCamera_Reset(swigCPtr);
  }

  public void SetFormat(FbxCamera.EFormat pFormat) {
    fbx_wrapperPINVOKE.FbxCamera_SetFormat(swigCPtr, (int)pFormat);
  }

  public FbxCamera.EFormat GetFormat() {
    FbxCamera.EFormat ret = (FbxCamera.EFormat)fbx_wrapperPINVOKE.FbxCamera_GetFormat(swigCPtr);
    return ret;
  }

  public void SetAspect(FbxCamera.EAspectRatioMode pRatioMode, double pWidth, double pHeight) {
    fbx_wrapperPINVOKE.FbxCamera_SetAspect(swigCPtr, (int)pRatioMode, pWidth, pHeight);
  }

  public FbxCamera.EAspectRatioMode GetAspectRatioMode() {
    FbxCamera.EAspectRatioMode ret = (FbxCamera.EAspectRatioMode)fbx_wrapperPINVOKE.FbxCamera_GetAspectRatioMode(swigCPtr);
    return ret;
  }

  public void SetPixelRatio(double pRatio) {
    fbx_wrapperPINVOKE.FbxCamera_SetPixelRatio(swigCPtr, pRatio);
  }

  public double GetPixelRatio() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetPixelRatio(swigCPtr);
    return ret;
  }

  public void SetNearPlane(double pDistance) {
    fbx_wrapperPINVOKE.FbxCamera_SetNearPlane(swigCPtr, pDistance);
  }

  public double GetNearPlane() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetNearPlane(swigCPtr);
    return ret;
  }

  public void SetFarPlane(double pDistance) {
    fbx_wrapperPINVOKE.FbxCamera_SetFarPlane(swigCPtr, pDistance);
  }

  public double GetFarPlane() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetFarPlane(swigCPtr);
    return ret;
  }

  public void SetApertureFormat(FbxCamera.EApertureFormat pFormat) {
    fbx_wrapperPINVOKE.FbxCamera_SetApertureFormat(swigCPtr, (int)pFormat);
  }

  public FbxCamera.EApertureFormat GetApertureFormat() {
    FbxCamera.EApertureFormat ret = (FbxCamera.EApertureFormat)fbx_wrapperPINVOKE.FbxCamera_GetApertureFormat(swigCPtr);
    return ret;
  }

  public void SetApertureMode(FbxCamera.EApertureMode pMode) {
    fbx_wrapperPINVOKE.FbxCamera_SetApertureMode(swigCPtr, (int)pMode);
  }

  public FbxCamera.EApertureMode GetApertureMode() {
    FbxCamera.EApertureMode ret = (FbxCamera.EApertureMode)fbx_wrapperPINVOKE.FbxCamera_GetApertureMode(swigCPtr);
    return ret;
  }

  public void SetApertureWidth(double pWidth) {
    fbx_wrapperPINVOKE.FbxCamera_SetApertureWidth(swigCPtr, pWidth);
  }

  public double GetApertureWidth() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetApertureWidth(swigCPtr);
    return ret;
  }

  public void SetApertureHeight(double pHeight) {
    fbx_wrapperPINVOKE.FbxCamera_SetApertureHeight(swigCPtr, pHeight);
  }

  public double GetApertureHeight() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetApertureHeight(swigCPtr);
    return ret;
  }

  public void SetSqueezeRatio(double pRatio) {
    fbx_wrapperPINVOKE.FbxCamera_SetSqueezeRatio(swigCPtr, pRatio);
  }

  public double GetSqueezeRatio() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetSqueezeRatio(swigCPtr);
    return ret;
  }

  public double ComputeFieldOfView(double pFocalLength) {
    double ret = fbx_wrapperPINVOKE.FbxCamera_ComputeFieldOfView(swigCPtr, pFocalLength);
    return ret;
  }

  public double ComputeFocalLength(double pAngleOfView) {
    double ret = fbx_wrapperPINVOKE.FbxCamera_ComputeFocalLength(swigCPtr, pAngleOfView);
    return ret;
  }

  public void SetBackgroundFileName(string pFileName) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackgroundFileName(swigCPtr, pFileName);
  }

  public string GetBackgroundFileName() {
    string ret = fbx_wrapperPINVOKE.FbxCamera_GetBackgroundFileName(swigCPtr);
    return ret;
  }

  public void SetBackgroundMediaName(string pFileName) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackgroundMediaName(swigCPtr, pFileName);
  }

  public string GetBackgroundMediaName() {
    string ret = fbx_wrapperPINVOKE.FbxCamera_GetBackgroundMediaName(swigCPtr);
    return ret;
  }

  public void SetForegroundFileName(string pFileName) {
    fbx_wrapperPINVOKE.FbxCamera_SetForegroundFileName(swigCPtr, pFileName);
  }

  public string GetForegroundFileName() {
    string ret = fbx_wrapperPINVOKE.FbxCamera_GetForegroundFileName(swigCPtr);
    return ret;
  }

  public void SetForegroundMediaName(string pFileName) {
    fbx_wrapperPINVOKE.FbxCamera_SetForegroundMediaName(swigCPtr, pFileName);
  }

  public string GetForegroundMediaName() {
    string ret = fbx_wrapperPINVOKE.FbxCamera_GetForegroundMediaName(swigCPtr);
    return ret;
  }

  public void SetBackgroundAlphaTreshold(double pThreshold) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackgroundAlphaTreshold(swigCPtr, pThreshold);
  }

  public double GetBackgroundAlphaTreshold() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetBackgroundAlphaTreshold(swigCPtr);
    return ret;
  }

  public void SetBackPlateFitImage(bool pFitImage) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackPlateFitImage(swigCPtr, pFitImage);
  }

  public bool GetBackPlateFitImage() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetBackPlateFitImage(swigCPtr);
    return ret;
  }

  public void SetBackPlateCrop(bool pCrop) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackPlateCrop(swigCPtr, pCrop);
  }

  public bool GetBackPlateCrop() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetBackPlateCrop(swigCPtr);
    return ret;
  }

  public void SetBackPlateCenter(bool pCenter) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackPlateCenter(swigCPtr, pCenter);
  }

  public bool GetBackPlateCenter() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetBackPlateCenter(swigCPtr);
    return ret;
  }

  public void SetBackPlateKeepRatio(bool pKeepRatio) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackPlateKeepRatio(swigCPtr, pKeepRatio);
  }

  public bool GetBackPlateKeepRatio() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetBackPlateKeepRatio(swigCPtr);
    return ret;
  }

  public void SetShowFrontPlate(bool pEnable) {
    fbx_wrapperPINVOKE.FbxCamera_SetShowFrontPlate(swigCPtr, pEnable);
  }

  public bool GetShowFrontPlate() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetShowFrontPlate(swigCPtr);
    return ret;
  }

  public void SetFrontPlateFitImage(bool pFrontPlateFitImage) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlateFitImage(swigCPtr, pFrontPlateFitImage);
  }

  public bool GetFrontPlateFitImage() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetFrontPlateFitImage(swigCPtr);
    return ret;
  }

  public void SetFrontPlateCrop(bool pFrontPlateCrop) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlateCrop(swigCPtr, pFrontPlateCrop);
  }

  public bool GetFrontPlateCrop() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetFrontPlateCrop(swigCPtr);
    return ret;
  }

  public void SetFrontPlateCenter(bool pFrontPlateCenter) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlateCenter(swigCPtr, pFrontPlateCenter);
  }

  public bool GetFrontPlateCenter() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetFrontPlateCenter(swigCPtr);
    return ret;
  }

  public void SetFrontPlateKeepRatio(bool pFrontPlateKeepRatio) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlateKeepRatio(swigCPtr, pFrontPlateKeepRatio);
  }

  public bool GetFrontPlateKeepRatio() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetFrontPlateKeepRatio(swigCPtr);
    return ret;
  }

  public void SetForegroundOpacity(double pOpacity) {
    fbx_wrapperPINVOKE.FbxCamera_SetForegroundOpacity(swigCPtr, pOpacity);
  }

  public double GetForegroundOpacity() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetForegroundOpacity(swigCPtr);
    return ret;
  }

  public void SetForegroundTexture(FbxTexture pTexture) {
    fbx_wrapperPINVOKE.FbxCamera_SetForegroundTexture(swigCPtr, FbxTexture.getCPtr(pTexture));
  }

  public FbxTexture GetForegroundTexture() {
    global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_GetForegroundTexture(swigCPtr);
    FbxTexture ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxTexture(cPtr, false);
    return ret;
  }

  public void SetBackPlaneDistanceMode(FbxCamera.EFrontBackPlaneDistanceMode pMode) {
    fbx_wrapperPINVOKE.FbxCamera_SetBackPlaneDistanceMode(swigCPtr, (int)pMode);
  }

  public FbxCamera.EFrontBackPlaneDistanceMode GetBackPlaneDistanceMode() {
    FbxCamera.EFrontBackPlaneDistanceMode ret = (FbxCamera.EFrontBackPlaneDistanceMode)fbx_wrapperPINVOKE.FbxCamera_GetBackPlaneDistanceMode(swigCPtr);
    return ret;
  }

  public void SetFrontPlaneDistance(double pDistance) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlaneDistance(swigCPtr, pDistance);
  }

  public double GetFrontPlaneDistance() {
    double ret = fbx_wrapperPINVOKE.FbxCamera_GetFrontPlaneDistance(swigCPtr);
    return ret;
  }

  public void SetFrontPlaneDistanceMode(FbxCamera.EFrontBackPlaneDistanceMode pMode) {
    fbx_wrapperPINVOKE.FbxCamera_SetFrontPlaneDistanceMode(swigCPtr, (int)pMode);
  }

  public FbxCamera.EFrontBackPlaneDistanceMode GetFrontPlaneDistanceMode() {
    FbxCamera.EFrontBackPlaneDistanceMode ret = (FbxCamera.EFrontBackPlaneDistanceMode)fbx_wrapperPINVOKE.FbxCamera_GetFrontPlaneDistanceMode(swigCPtr);
    return ret;
  }

  public void SetViewFrustumFrontPlaneMode(FbxCamera.EFrontBackPlaneDisplayMode pMode) {
    fbx_wrapperPINVOKE.FbxCamera_SetViewFrustumFrontPlaneMode(swigCPtr, (int)pMode);
  }

  public FbxCamera.EFrontBackPlaneDisplayMode GetViewFrustumFrontPlaneMode() {
    FbxCamera.EFrontBackPlaneDisplayMode ret = (FbxCamera.EFrontBackPlaneDisplayMode)fbx_wrapperPINVOKE.FbxCamera_GetViewFrustumFrontPlaneMode(swigCPtr);
    return ret;
  }

  public void SetViewFrustumBackPlaneMode(FbxCamera.EFrontBackPlaneDisplayMode pMode) {
    fbx_wrapperPINVOKE.FbxCamera_SetViewFrustumBackPlaneMode(swigCPtr, (int)pMode);
  }

  public FbxCamera.EFrontBackPlaneDisplayMode GetViewFrustumBackPlaneMode() {
    FbxCamera.EFrontBackPlaneDisplayMode ret = (FbxCamera.EFrontBackPlaneDisplayMode)fbx_wrapperPINVOKE.FbxCamera_GetViewFrustumBackPlaneMode(swigCPtr);
    return ret;
  }

  public void SetViewCameraInterest(bool pEnable) {
    fbx_wrapperPINVOKE.FbxCamera_SetViewCameraInterest(swigCPtr, pEnable);
  }

  public bool GetViewCameraInterest() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetViewCameraInterest(swigCPtr);
    return ret;
  }

  public void SetViewNearFarPlanes(bool pEnable) {
    fbx_wrapperPINVOKE.FbxCamera_SetViewNearFarPlanes(swigCPtr, pEnable);
  }

  public bool GetViewNearFarPlanes() {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_GetViewNearFarPlanes(swigCPtr);
    return ret;
  }

  public FbxVector4 EvaluatePosition(FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluatePosition__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluatePosition() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluatePosition__SWIG_1(swigCPtr), true);
    return ret;
  }

  public FbxVector4 EvaluateLookAtPosition(FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluateLookAtPosition__SWIG_0(swigCPtr, FbxTime.getCPtr(pTime)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateLookAtPosition() {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluateLookAtPosition__SWIG_1(swigCPtr), true);
    return ret;
  }

  public FbxVector4 EvaluateUpDirection(FbxVector4 pCameraPosition, FbxVector4 pLookAtPosition, FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluateUpDirection__SWIG_0(swigCPtr, FbxVector4.getCPtr(pCameraPosition), FbxVector4.getCPtr(pLookAtPosition), FbxTime.getCPtr(pTime)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 EvaluateUpDirection(FbxVector4 pCameraPosition, FbxVector4 pLookAtPosition) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_EvaluateUpDirection__SWIG_1(swigCPtr, FbxVector4.getCPtr(pCameraPosition), FbxVector4.getCPtr(pLookAtPosition)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxMatrix ComputeProjectionMatrix(int pWidth, int pHeight, bool pVerticalFOV) {
    FbxMatrix ret = new FbxMatrix(fbx_wrapperPINVOKE.FbxCamera_ComputeProjectionMatrix__SWIG_0(swigCPtr, pWidth, pHeight, pVerticalFOV), true);
    return ret;
  }

  public FbxMatrix ComputeProjectionMatrix(int pWidth, int pHeight) {
    FbxMatrix ret = new FbxMatrix(fbx_wrapperPINVOKE.FbxCamera_ComputeProjectionMatrix__SWIG_1(swigCPtr, pWidth, pHeight), true);
    return ret;
  }

  public bool IsBoundingBoxInView(FbxMatrix pWorldToScreen, FbxMatrix pWorldToCamera, FbxVector4 pPoints) {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_IsBoundingBoxInView(swigCPtr, FbxMatrix.getCPtr(pWorldToScreen), FbxMatrix.getCPtr(pWorldToCamera), FbxVector4.getCPtr(pPoints));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsPointInView(FbxMatrix pWorldToScreen, FbxMatrix pWorldToCamera, FbxVector4 pPoint) {
    bool ret = fbx_wrapperPINVOKE.FbxCamera_IsPointInView(swigCPtr, FbxMatrix.getCPtr(pWorldToScreen), FbxMatrix.getCPtr(pWorldToCamera), FbxVector4.getCPtr(pPoint));
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxMatrix ComputeWorldToScreen(int pPixelWidth, int pPixelHeight, FbxAMatrix pWorldToCamera) {
    FbxMatrix ret = new FbxMatrix(fbx_wrapperPINVOKE.FbxCamera_ComputeWorldToScreen(swigCPtr, pPixelWidth, pPixelHeight, FbxAMatrix.getCPtr(pWorldToCamera)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 ComputeScreenToWorld(float pX, float pY, float pWidth, float pHeight, FbxTime pTime) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_ComputeScreenToWorld__SWIG_0(swigCPtr, pX, pY, pWidth, pHeight, FbxTime.getCPtr(pTime)), true);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FbxVector4 ComputeScreenToWorld(float pX, float pY, float pWidth, float pHeight) {
    FbxVector4 ret = new FbxVector4(fbx_wrapperPINVOKE.FbxCamera_ComputeScreenToWorld__SWIG_1(swigCPtr, pX, pY, pWidth, pHeight), true);
    return ret;
  }

  public FbxPropertyTDouble3 Position {
    set {
      fbx_wrapperPINVOKE.FbxCamera_Position_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_Position_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 UpVector {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UpVector_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UpVector_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 InterestPosition {
    set {
      fbx_wrapperPINVOKE.FbxCamera_InterestPosition_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_InterestPosition_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble Roll {
    set {
      fbx_wrapperPINVOKE.FbxCamera_Roll_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_Roll_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble OpticalCenterX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_OpticalCenterX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_OpticalCenterX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble OpticalCenterY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_OpticalCenterY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_OpticalCenterY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 BackgroundColor {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackgroundColor_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackgroundColor_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble TurnTable {
    set {
      fbx_wrapperPINVOKE.FbxCamera_TurnTable_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_TurnTable_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool DisplayTurnTableIcon {
    set {
      fbx_wrapperPINVOKE.FbxCamera_DisplayTurnTableIcon_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_DisplayTurnTableIcon_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseMotionBlur {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseMotionBlur_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseMotionBlur_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseRealTimeMotionBlur {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseRealTimeMotionBlur_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseRealTimeMotionBlur_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble MotionBlurIntensity {
    set {
      fbx_wrapperPINVOKE.FbxCamera_MotionBlurIntensity_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_MotionBlurIntensity_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAspectRatioMode_t AspectRatioMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AspectRatioMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAspectRatioMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AspectRatioMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAspectRatioMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAspectRatioMode_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble AspectWidth {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AspectWidth_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AspectWidth_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble AspectHeight {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AspectHeight_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AspectHeight_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble PixelAspectRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_PixelAspectRatio_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_PixelAspectRatio_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureMode_t ApertureMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ApertureMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ApertureMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureMode_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EGateFit_t GateFit {
    set {
      fbx_wrapperPINVOKE.FbxCamera_GateFit_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EGateFit_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_GateFit_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EGateFit_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EGateFit_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FieldOfView {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FieldOfView_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FieldOfView_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FieldOfViewX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FieldOfViewX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FieldOfViewX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FieldOfViewY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FieldOfViewY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FieldOfViewY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FocalLength {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FocalLength_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FocalLength_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFormat_t CameraFormat {
    set {
      fbx_wrapperPINVOKE.FbxCamera_CameraFormat_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFormat_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_CameraFormat_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFormat_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFormat_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseFrameColor {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseFrameColor_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseFrameColor_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 FrameColor {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrameColor_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrameColor_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowName {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowName_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowName_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowInfoOnMoving {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowInfoOnMoving_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowInfoOnMoving_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowGrid {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowGrid_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowGrid_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowOpticalCenter {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowOpticalCenter_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowOpticalCenter_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowAzimut {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowAzimut_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowAzimut_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowTimeCode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowTimeCode_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowTimeCode_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowAudio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowAudio_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowAudio_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble3 AudioColor {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AudioColor_set(swigCPtr, FbxPropertyTDouble3.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AudioColor_get(swigCPtr);
      FbxPropertyTDouble3 ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble3(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble NearPlane {
    set {
      fbx_wrapperPINVOKE.FbxCamera_NearPlane_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_NearPlane_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FarPlane {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FarPlane_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FarPlane_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool AutoComputeClipPlanes {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AutoComputeClipPlanes_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AutoComputeClipPlanes_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmWidth {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmWidth_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmWidth_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmHeight {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmHeight_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmHeight_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmAspectRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmAspectRatio_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmAspectRatio_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmSqueezeRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmSqueezeRatio_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmSqueezeRatio_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureFormat_t FilmFormat {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmFormat_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureFormat_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmFormat_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureFormat_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EApertureFormat_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmOffsetX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmOffsetX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmOffsetX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmOffsetY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmOffsetY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmOffsetY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble PreScale {
    set {
      fbx_wrapperPINVOKE.FbxCamera_PreScale_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_PreScale_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmTranslateX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmTranslateX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmTranslateX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmTranslateY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmTranslateY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmTranslateY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmRollPivotX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmRollPivotX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmRollPivotX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmRollPivotY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmRollPivotY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmRollPivotY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FilmRollValue {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmRollValue_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmRollValue_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFilmRollOrder_t FilmRollOrder {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FilmRollOrder_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFilmRollOrder_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FilmRollOrder_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFilmRollOrder_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFilmRollOrder_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ViewCameraToLookAt {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ViewCameraToLookAt_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ViewCameraToLookAt_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ViewFrustumNearFarPlane {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ViewFrustumNearFarPlane_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ViewFrustumNearFarPlane_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t ViewFrustumBackPlaneMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ViewFrustumBackPlaneMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ViewFrustumBackPlaneMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneDistance {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneDistance_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneDistance_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t BackPlaneDistanceMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneDistanceMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneDistanceMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t ViewFrustumFrontPlaneMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ViewFrustumFrontPlaneMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ViewFrustumFrontPlaneMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDisplayMode_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneDistance {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneDistance_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneDistance_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t FrontPlaneDistanceMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneDistanceMode_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneDistanceMode_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFrontBackPlaneDistanceMode_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool LockMode {
    set {
      fbx_wrapperPINVOKE.FbxCamera_LockMode_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_LockMode_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool LockInterestNavigation {
    set {
      fbx_wrapperPINVOKE.FbxCamera_LockInterestNavigation_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_LockInterestNavigation_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool BackPlateFitImage {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlateFitImage_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlateFitImage_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool BackPlateCrop {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlateCrop_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlateCrop_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool BackPlateCenter {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlateCenter_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlateCenter_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool BackPlateKeepRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlateKeepRatio_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlateKeepRatio_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackgroundAlphaTreshold {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackgroundAlphaTreshold_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackgroundAlphaTreshold_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneOffsetX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneOffsetX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneOffsetX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneOffsetY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneOffsetY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneOffsetY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneRotation {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneRotation_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneRotation_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneScaleX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneScaleX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneScaleX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble BackPlaneScaleY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackPlaneScaleY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackPlaneScaleY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowBackplate {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowBackplate_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowBackplate_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference BackgroundTexture {
    set {
      fbx_wrapperPINVOKE.FbxCamera_BackgroundTexture_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_BackgroundTexture_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool FrontPlateFitImage {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlateFitImage_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlateFitImage_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool FrontPlateCrop {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlateCrop_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlateCrop_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool FrontPlateCenter {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlateCenter_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlateCenter_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool FrontPlateKeepRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlateKeepRatio_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlateKeepRatio_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool ShowFrontplate {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ShowFrontplate_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ShowFrontplate_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneOffsetX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneOffsetX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneOffsetX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneOffsetY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneOffsetY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneOffsetY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneRotation {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneRotation_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneRotation_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneScaleX {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneScaleX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneScaleX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FrontPlaneScaleY {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrontPlaneScaleY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrontPlaneScaleY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTReference ForegroundTexture {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ForegroundTexture_set(swigCPtr, FbxPropertyTReference.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ForegroundTexture_get(swigCPtr);
      FbxPropertyTReference ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTReference(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble ForegroundOpacity {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ForegroundOpacity_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ForegroundOpacity_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool DisplaySafeArea {
    set {
      fbx_wrapperPINVOKE.FbxCamera_DisplaySafeArea_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_DisplaySafeArea_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool DisplaySafeAreaOnRender {
    set {
      fbx_wrapperPINVOKE.FbxCamera_DisplaySafeAreaOnRender_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_DisplaySafeAreaOnRender_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESafeAreaStyle_t SafeAreaDisplayStyle {
    set {
      fbx_wrapperPINVOKE.FbxCamera_SafeAreaDisplayStyle_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESafeAreaStyle_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_SafeAreaDisplayStyle_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESafeAreaStyle_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESafeAreaStyle_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble SafeAreaAspectRatio {
    set {
      fbx_wrapperPINVOKE.FbxCamera_SafeAreaAspectRatio_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_SafeAreaAspectRatio_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool Use2DMagnifierZoom {
    set {
      fbx_wrapperPINVOKE.FbxCamera_Use2DMagnifierZoom_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_Use2DMagnifierZoom_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble _2DMagnifierZoom {
    set {
      fbx_wrapperPINVOKE.FbxCamera__2DMagnifierZoom_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera__2DMagnifierZoom_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble _2DMagnifierX {
    set {
      fbx_wrapperPINVOKE.FbxCamera__2DMagnifierX_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera__2DMagnifierX_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble _2DMagnifierY {
    set {
      fbx_wrapperPINVOKE.FbxCamera__2DMagnifierY_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera__2DMagnifierY_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EProjectionType_t ProjectionType {
    set {
      fbx_wrapperPINVOKE.FbxCamera_ProjectionType_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EProjectionType_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_ProjectionType_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EProjectionType_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EProjectionType_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble OrthoZoom {
    set {
      fbx_wrapperPINVOKE.FbxCamera_OrthoZoom_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_OrthoZoom_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseRealTimeDOFAndAA {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseRealTimeDOFAndAA_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseRealTimeDOFAndAA_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseDepthOfField {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseDepthOfField_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseDepthOfField_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFocusDistanceSource_t FocusSource {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FocusSource_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFocusDistanceSource_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FocusSource_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFocusDistanceSource_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EFocusDistanceSource_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FocusAngle {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FocusAngle_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FocusAngle_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble FocusDistance {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FocusDistance_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FocusDistance_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseAntialiasing {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseAntialiasing_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseAntialiasing_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTDouble AntialiasingIntensity {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AntialiasingIntensity_set(swigCPtr, FbxPropertyTDouble.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AntialiasingIntensity_get(swigCPtr);
      FbxPropertyTDouble ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTDouble(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAntialiasingMethod_t AntialiasingMethod {
    set {
      fbx_wrapperPINVOKE.FbxCamera_AntialiasingMethod_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAntialiasingMethod_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_AntialiasingMethod_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAntialiasingMethod_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__EAntialiasingMethod_t(cPtr, false);
      return ret;
    } 
  }

  public FbxPropertyTBool UseAccumulationBuffer {
    set {
      fbx_wrapperPINVOKE.FbxCamera_UseAccumulationBuffer_set(swigCPtr, FbxPropertyTBool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_UseAccumulationBuffer_get(swigCPtr);
      FbxPropertyTBool ret = (cPtr == global::System.IntPtr.Zero) ? null : new FbxPropertyTBool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_int_t FrameSamplingCount {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrameSamplingCount_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrameSamplingCount_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESamplingType_t FrameSamplingType {
    set {
      fbx_wrapperPINVOKE.FbxCamera_FrameSamplingType_set(swigCPtr, SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESamplingType_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = fbx_wrapperPINVOKE.FbxCamera_FrameSamplingType_get(swigCPtr);
      SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESamplingType_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FbxPropertyTT_FbxCamera__ESamplingType_t(cPtr, false);
      return ret;
    } 
  }

  public override FbxObject Copy(FbxObject pObject) {
    FbxObject ret = new FbxObject(fbx_wrapperPINVOKE.FbxCamera_Copy(swigCPtr, FbxObject.getCPtr(pObject)), false);
    if (fbx_wrapperPINVOKE.SWIGPendingException.Pending) throw fbx_wrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum EProjectionType {
    ePerspective,
    eOrthogonal
  }

  public enum EFormat {
    eCustomFormat,
    eD1NTSC,
    eNTSC,
    ePAL,
    eD1PAL,
    eHD,
    e640x480,
    e320x200,
    e320x240,
    e128x128,
    eFullscreen
  }

  public enum EAspectRatioMode {
    eWindowSize,
    eFixedRatio,
    eFixedResolution,
    eFixedWidth,
    eFixedHeight
  }

  public enum EApertureFormat {
    eCustomAperture,
    e16mmTheatrical,
    eSuper16mm,
    e35mmAcademy,
    e35mmTVProjection,
    e35mmFullAperture,
    e35mm185Projection,
    e35mmAnamorphic,
    e70mmProjection,
    eVistaVision,
    eDynaVision,
    eIMAX
  }

  public enum EApertureMode {
    eHorizAndVert,
    eHorizontal,
    eVertical,
    eFocalLength
  }

  public enum EGateFit {
    eFitNone,
    eFitVertical,
    eFitHorizontal,
    eFitFill,
    eFitOverscan,
    eFitStretch
  }

  public enum EFilmRollOrder {
    eRotateFirst,
    eTranslateFirst
  }

  public enum EPlateDrawingMode {
    ePlateBackground,
    ePlateForeground,
    ePlateBackAndFront
  }

  public enum EFrontBackPlaneDistanceMode {
    eRelativeToInterest,
    eRelativeToCamera
  }

  public enum EFrontBackPlaneDisplayMode {
    ePlanesDisabled,
    ePlanesAlways,
    ePlanesWhenMedia
  }

  public enum ESafeAreaStyle {
    eSafeAreaRound,
    eSafeAreaSquare
  }

  public enum ERenderOptionsUsageTime {
    eInteractive,
    eOnDemand
  }

  public enum EAntialiasingMethod {
    eAAOversampling,
    eAAHardware
  }

  public enum ESamplingType {
    eSamplingUniform,
    eSamplingStochastic
  }

  public enum EFocusDistanceSource {
    eFocusSrcCameraInterest,
    eFocusSpecificDistance
  }

}

}
